[1mdiff --git a/schedule-manager/src/api.py b/schedule-manager/src/api.py[m
[1mindex 15a6540..ec3fa68 100644[m
[1m--- a/schedule-manager/src/api.py[m
[1m+++ b/schedule-manager/src/api.py[m
[36m@@ -4,6 +4,11 @@[m [mfrom datetime import datetime, timedelta[m
 from typing import List, Optional[m
 [m
 from fastapi import FastAPI, HTTPException, Path, Request[m
[32m+[m[32mfrom fastapi.responses import RedirectResponse[m
[32m+[m[32mimport secrets[m
[32m+[m[32mimport base64[m
[32m+[m[32mimport os[m
[32m+[m[32mfrom urllib.parse import urlencode[m
 from pydantic import BaseModel, Field[m
 [m
 try:[m
[36m@@ -20,6 +25,10 @@[m [mexcept ImportError:[m
     from rsvp import verify_params  # type: ignore[m
 [m
 [m
[32m+[m[32m# Ensure environment variables (.env) are loaded for all endpoints (including /rsvp)[m
[32m+[m[32mload_env()[m
[32m+[m
[32m+[m
 class ScheduleRequest(BaseModel):[m
     users: List[str][m
     start: str[m
[36m@@ -55,6 +64,32 @@[m [mclass AutoScheduleRequest(BaseModel):[m
     location: Optional[str] = None[m
 [m
 [m
[32m+[m[32mclass AutoScheduleWithTeamsRequest(BaseModel):[m
[32m+[m[32m    users: List[str][m
[32m+[m[32m    start: str[m
[32m+[m[32m    end: str[m
[32m+[m[32m    duration: int = 60[m
[32m+[m[32m    interval: int = 30[m
[32m+[m[32m    timezone: str = "Asia/Seoul"[m
[32m+[m[32m    subject: str = "회식"[m
[32m+[m[32m    body: Optional[str] = None[m
[32m+[m[32m    location: Optional[str] = None[m
[32m+[m[32m    teams_chat_id: str  # Teams 채팅 ID[m
[32m+[m
[32m+[m
[32m+[m[32mclass ScheduleProposalRequest(BaseModel):[m
[32m+[m[32m    users: List[str][m
[32m+[m[32m    start: str[m
[32m+[m[32m    end: str[m
[32m+[m[32m    duration: int = 60[m
[32m+[m[32m    interval: int = 30[m
[32m+[m[32m    timezone: str = "Asia/Seoul"[m
[32m+[m[32m    subject: str = "회식"[m
[32m+[m[32m    body: Optional[str] = None[m
[32m+[m[32m    location: Optional[str] = None[m
[32m+[m[32m    teams_chat_id: str  # Teams 채팅 ID[m
[32m+[m
[32m+[m
 def _make_client() -> GraphClient:[m
     load_env()[m
     settings = load_settings()[m
[36m@@ -66,6 +101,16 @@[m [mdef _make_client() -> GraphClient:[m
     return GraphClient(settings.graph_host, token["access_token"])[m
 [m
 [m
[32m+[m[32mdef _oauth_settings():[m
[32m+[m[32m    tenant = os.getenv("AZURE_TENANT_ID", "common")[m
[32m+[m[32m    client_id = os.getenv("AZURE_CLIENT_ID")[m
[32m+[m[32m    redirect_uri = os.getenv("OAUTH_REDIRECT_URI")  # e.g., https://<domain>/oauth/callback[m
[32m+[m[32m    client_secret = os.getenv("OAUTH_CLIENT_SECRET")  # optional, for confidential clients[m
[32m+[m[32m    auth_endpoint = f"https://login.microsoftonline.com/{tenant}/oauth2/v2.0/authorize"[m
[32m+[m[32m    token_endpoint = f"https://login.microsoftonline.com/{tenant}/oauth2/v2.0/token"[m
[32m+[m[32m    return tenant, client_id, redirect_uri, auth_endpoint, token_endpoint, client_secret[m
[32m+[m
[32m+[m
 app = FastAPI(title="Schedule Manager API", version="1.0.0")[m
 [m
 [m
[36m@@ -166,6 +211,253 @@[m [mdef autoschedule(req: AutoScheduleRequest):[m
         raise HTTPException(status_code=500, detail=str(e))[m
 [m
 [m
[32m+[m[32m@app.post("/autoschedule_with_teams")[m
[32m+[m[32mdef autoschedule_with_teams(req: AutoScheduleWithTeamsRequest):[m
[32m+[m[32m    """AI가 자동으로 최적 시간을 찾아 회의를 생성하고, Teams 채팅으로 RSVP 링크를 전송"""[m
[32m+[m[32m    client = _make_client()[m
[32m+[m[32m    try:[m
[32m+[m[32m        # 1. 자동 스케줄링 (기존 로직)[m
[32m+[m[32m        sched = client.get_schedule(req.users, req.start, req.end, req.interval, req.timezone)[m
[32m+[m[32m        views = client.availability_to_slots(sched, req.interval)[m
[32m+[m[32m        if not views:[m
[32m+[m[32m            raise HTTPException(status_code=400, detail="no schedule data")[m
[32m+[m
[32m+[m[32m        length_needed = max(1, req.duration // req.interval + (1 if req.duration % req.interval else 0))[m
[32m+[m[32m        slot_count = len(next(iter(views.values())))[m
[32m+[m
[32m+[m[32m        def is_free_at(i: int) -> bool:[m
[32m+[m[32m            return all(views[u][i] == '0' for u in req.users)[m
[32m+[m
[32m+[m[32m        run = 0[m
[32m+[m[32m        start_index: Optional[int] = None[m
[32m+[m[32m        for i in range(slot_count):[m
[32m+[m[32m            if is_free_at(i):[m
[32m+[m[32m                if run == 0:[m
[32m+[m[32m                    start_index = i[m
[32m+[m[32m                run += 1[m
[32m+[m[32m                if run >= length_needed:[m
[32m+[m[32m                    break[m
[32m+[m[32m            else:[m
[32m+[m[32m                run = 0[m
[32m+[m[32m                start_index = None[m
[32m+[m[32m        if start_index is None or run < length_needed:[m
[32m+[m[32m            raise HTTPException(status_code=404, detail="no common free slot")[m
[32m+[m
[32m+[m[32m        base = datetime.fromisoformat(req.start)[m
[32m+[m[32m        slot_start = base + timedelta(minutes=start_index * req.interval)[m
[32m+[m[32m        slot_end = slot_start + timedelta(minutes=req.duration)[m
[32m+[m[41m        [m
[32m+[m[32m        # 2. 회의 생성[m
[32m+[m[32m        created = client.create_event([m
[32m+[m[32m            subject=req.subject,[m
[32m+[m[32m            start=slot_start.strftime("%Y-%m-%dT%H:%M:%S"),[m
[32m+[m[32m            end=slot_end.strftime("%Y-%m-%dT%H:%M:%S"),[m
[32m+[m[32m            timezone=req.timezone,[m
[32m+[m[32m            attendees=req.users,[m
[32m+[m[32m            body=req.body,[m
[32m+[m[32m            location=req.location,[m
[32m+[m[32m        )[m
[32m+[m[41m        [m
[32m+[m[32m        # 3. Teams 채팅으로 RSVP 링크 전송[m
[32m+[m[32m        ical_uid = created.get("iCalUId")[m
[32m+[m[32m        if ical_uid:[m
[32m+[m[32m            # 현재 ngrok URL 가져오기[m
[32m+[m[32m            redirect_uri = os.getenv("OAUTH_REDIRECT_URI", "https://6f3f0e121ad9.ngrok-free.app/oauth/callback")[m
[32m+[m[32m            ngrok_base = redirect_uri.replace("/oauth/callback", "")[m
[32m+[m[41m            [m
[32m+[m[32m            rsvp_html = f"""[m
[32m+[m[32m            <p>🤖 AI가 자동으로 스케줄한 회의: <strong>{req.subject}</strong></p>[m
[32m+[m[32m            <p>📅 시간: {slot_start.strftime('%Y-%m-%d %H:%M')} - {slot_end.strftime('%H:%M')}</p>[m
[32m+[m[32m            <p>👥 참석자: {', '.join(req.users)}</p>[m
[32m+[m[32m            <p>참석 여부를 알려주세요:</p>[m
[32m+[m[32m            <p>[m
[32m+[m[32m                <a href='{ngrok_base}/rsvp_accept?icalUid={ical_uid}'>✅ 참석</a> |[m[41m [m
[32m+[m[32m                <a href='{ngrok_base}/rsvp_accept?icalUid={ical_uid}&resp=no'>❌ 불참</a>[m
[32m+[m[32m            </p>[m
[32m+[m[32m            """[m
[32m+[m[41m            [m
[32m+[m[32m            # Teams 채팅으로 메시지 전송[m
[32m+[m[32m            from .teams import send_teams_message[m
[32m+[m[32m            teams_result = send_teams_message(req.teams_chat_id, rsvp_html)[m
[32m+[m[41m            [m
[32m+[m[32m            return {[m
[32m+[m[32m                "event": created,[m
[32m+[m[32m                "teams_message": teams_result,[m
[32m+[m[32m                "rsvp_links": {[m
[32m+[m[32m                    "accept": f"{ngrok_base}/rsvp_accept?icalUid={ical_uid}",[m
[32m+[m[32m                    "decline": f"{ngrok_base}/rsvp_accept?icalUid={ical_uid}&resp=no"[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m        else:[m
[32m+[m[32m            return {"event": created, "teams_message": "No iCalUId found"}[m
[32m+[m[41m            [m
[32m+[m[32m    except HTTPException:[m
[32m+[m[32m        raise[m
[32m+[m[32m  